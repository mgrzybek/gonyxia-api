apiVersion: 1.0.0
metadata:
  generateName: gonyxia-api-
attributes:
  persistVolumes: 'false'
projects:
  - name: gonyxia-api
    source:
      location: 'https://github.com/mgrzybek/gonyxia-api.git'
      type: git
      branch: main
components:
  - id: golang/go/latest
    preferences:
      go.lintFlags: '--fast'
      go.useLanguageServer: 'true'
      go.lintTool: golangci-lint
    type: chePlugin
    alias: go-plugin
    env:
      - value: 'off'
        name: GO111MODULE
  - mountSources: true
    endpoints:
      - name: 8080-tcp
        port: 8080
    command:
      - sleep
      - infinity
    memoryLimit: 2Gi
    type: dockerimage
    image: golang
    alias: go
    env:
      - value: $(CHE_PROJECTS_ROOT)
        name: GOPATH
      - value: /tmp/.cache
        name: GOCACHE
commands:
  - name: Build
    actions:
      - workdir: '${CHE_PROJECTS_ROOT}/gonyxia-api'
        type: exec
        command: make onyxia-api
        component: go
  - name: Run (trace)
    actions:
      - workdir: '${CHE_PROJECTS_ROOT}/gonyxia-api'
        type: exec
        command: ./onyxia-api -l trace server -b 127.0.0.1:8081 -r ./etc/regions.json -c ./etc/catalogs.json
        component: go
  - name: Run (info)
    actions:
      - workdir: '${CHE_PROJECTS_ROOT}/gonyxia-api'
        type: exec
        command: ./onyxia-api -l info server -b 127.0.0.1:8081 -r ./etc/regions.json -c ./etc/catalogs.json
        component: go
  - name: Debug current file
    actions:
      - referenceContent: |-
          {
            "version": "0.2.0",
            "configurations": [
              {
                "name": "Debug current file",
                "type": "go",
                "request": "launch",
                "mode": "auto",
                "program": "${fileDirname}"
              }
            ]
          }
        type: vscode-launch
