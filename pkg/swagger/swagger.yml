openapi: 3.0.1
info:
  title: Onyxia-api
  description: Swagger onyxia-api
servers:
- url: https://datalab.sspcloud.fr
  description: Generated server url
tags:
- name: User
  description: Personal data
- name: My lab
  description: My services
- name: Cloud Shell
  description: Cloud shell
- name: Onboarding
  description: Onboarding related services
paths:
  /my-lab/app:
    get:
      tags:
      - My lab
      operationId: getApp
      parameters:
      - name: serviceId
        in: query
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Service'
      security:
      - auth: []
    put:
      tags:
      - My lab
      operationId: publishService
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateServiceDTO'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
      security:
      - auth: []
    delete:
      tags:
      - My lab
      operationId: destroyApp
      parameters:
      - name: path
        in: query
        required: false
        schema:
          type: string
      - name: bulk
        in: query
        required: false
        schema:
          type: boolean
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UninstallService'
      security:
      - auth: []
  /onboarding:
    post:
      tags:
      - Onboarding
      operationId: onboard
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OnboardingRequest'
        required: true
      responses:
        '200':
          description: OK
      security:
      - auth: []
  /my-lab/quota:
    get:
      tags:
      - My lab
      operationId: getQuota
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/QuotaUsage'
      security:
      - auth: []
    post:
      tags:
      - My lab
      operationId: applyQuota
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Quota'
        required: true
      responses:
        '200':
          description: OK
      security:
      - auth: []
  /user/info:
    get:
      tags:
      - User
      operationId: userInfo
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OnyxiaUser'
      security:
      - auth: []
  /public/regions:
    get:
      tags:
      - Public
      operationId: getRegions
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Region'
  /public/ip:
    get:
      tags:
      - Public
      operationId: getIP
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/IP'
  /public/healthcheck:
    get:
      tags:
      - Public
      operationId: healthcheck
      responses:
        '200':
          description: OK
  /public/configuration:
    get:
      tags:
      - Public
      operationId: configuration
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AppInfo'
  /public/catalog:
    get:
      tags:
      - Public
      operationId: getCatalogs
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Catalogs'
  /public/catalog/{catalogId}:
    get:
      tags:
      - Public
      operationId: getCatalogById
      parameters:
      - name: catalogId
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CatalogWrapper'
  /public/catalog/{catalogId}/{packageName}:
    get:
      tags:
      - Public
      operationId: getPackage
      parameters:
      - name: catalogId
        in: path
        required: true
        schema:
          type: string
      - name: packageName
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Pkg'
  /my-lab/services:
    get:
      tags:
      - My lab
      operationId: getMyServices
      parameters:
      - name: groupId
        in: query
        required: false
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ServicesListing'
      security:
      - auth: []
  /my-lab/app/logs:
    get:
      tags:
      - My lab
      operationId: getLogs
      parameters:
      - name: serviceId
        in: query
        required: true
        schema:
          type: string
      - name: taskId
        in: query
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
      security:
      - auth: []
  /cloudshell:
    get:
      tags:
      - Cloud Shell
      operationId: getCloudShellStatus
      parameters:
      - name: region
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/Region'
      - name: project
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/Project'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CloudShellStatus'
      security:
      - auth: []
  /my-lab/quota/reset:
    get:
      tags:
      - My lab
      operationId: resetQuota_4
      responses:
        '200':
          description: OK
      security:
      - auth: []
    put:
      tags:
      - My lab
      operationId: resetQuota_3
      responses:
        '200':
          description: OK
      security:
      - auth: []
    post:
      tags:
      - My lab
      operationId: resetQuota_6
      responses:
        '200':
          description: OK
      security:
      - auth: []
    delete:
      tags:
      - My lab
      operationId: resetQuota
      responses:
        '200':
          description: OK
      security:
      - auth: []
    options:
      tags:
      - My lab
      operationId: resetQuota_2
      responses:
        '200':
          description: OK
      security:
      - auth: []
    head:
      tags:
      - My lab
      operationId: resetQuota_1
      responses:
        '200':
          description: OK
      security:
      - auth: []
    patch:
      tags:
      - My lab
      operationId: resetQuota_5
      responses:
        '200':
          description: OK
      security:
      - auth: []
components:
  schemas:
    CreateServiceDTO:
      type: object
      properties:
        catalogId:
          type: string
        packageName:
          type: string
        packageVersion:
          type: string
        name:
          type: string
        options:
          type: object
        dryRun:
          type: boolean
    OnboardingRequest:
      type: object
      properties:
        group:
          type: string
    Quota:
      type: object
      properties:
        requests.memory:
          type: string
        requests.cpu:
          type: string
        limits.memory:
          type: string
        limits.cpu:
          type: string
        requests.storage:
          type: string
        count/pods:
          type: integer
          format: int32
    OnyxiaUser:
      type: object
      properties:
        email:
          type: string
        idep:
          type: string
        nomComplet:
          type: string
        password:
          type: string
        ip:
          type: string
        groups:
          type: array
          items:
            type: string
        projects:
          type: array
          items:
            $ref: '#/components/schemas/Project'
    Project:
      type: object
      properties:
        id:
          type: string
        group:
          type: string
        bucket:
          type: string
        namespace:
          type: string
        name:
          type: string
    CloudshellConfiguration:
      type: object
      properties:
        catalogId:
          type: string
        packageName:
          type: string
    Data:
      type: object
      properties:
        S3:
          $ref: '#/components/schemas/S3'
    DefaultConfiguration:
      type: object
      properties:
        networkPolicy:
          type: boolean
        ipprotection:
          type: boolean
    Expose:
      type: object
      properties:
        domain:
          type: string
    Location:
      type: object
      properties:
        lat:
          type: number
          format: double
        name:
          type: string
        long:
          type: number
          format: double
    Monitoring:
      type: object
      properties:
        URLPattern:
          type: string
    OnyxiaAPI:
      type: object
      properties:
        baseURL:
          type: string
    Quotas:
      type: object
      properties:
        enabled:
          type: boolean
        allowUserModification:
          type: boolean
        default:
          $ref: '#/components/schemas/Quota'
    Region:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        location:
          $ref: '#/components/schemas/Location'
        services:
          $ref: '#/components/schemas/Services'
        onyxiaAPI:
          $ref: '#/components/schemas/OnyxiaAPI'
        data:
          $ref: '#/components/schemas/Data'
    S3:
      type: object
      properties:
        monitoring:
          $ref: '#/components/schemas/Monitoring'
        URL:
          type: string
    Services:
      type: object
      properties:
        type:
          type: string
          enum:
          - KUBERNETES
        singleNamespace:
          type: boolean
        namespacePrefix:
          type: string
        groupNamespacePrefix:
          type: string
        usernamePrefix:
          type: string
        groupPrefix:
          type: string
        authenticationMode:
          type: string
          enum:
          - impersonate
          - admin
        expose:
          $ref: '#/components/schemas/Expose'
        monitoring:
          $ref: '#/components/schemas/Monitoring'
        cloudshell:
          $ref: '#/components/schemas/CloudshellConfiguration'
        initScript:
          type: string
        quotas:
          $ref: '#/components/schemas/Quotas'
        defaultConfiguration:
          $ref: '#/components/schemas/DefaultConfiguration'
    IP:
      type: object
      properties:
        ip:
          type: string
    AppInfo:
      type: object
      properties:
        build:
          $ref: '#/components/schemas/BuildInfo'
        regions:
          type: array
          items:
            $ref: '#/components/schemas/Region'
    BuildInfo:
      type: object
      properties:
        version:
          type: string
        timestamp:
          type: integer
          format: int64
    CatalogWrapper:
      type: object
      properties:
        catalog:
          $ref: '#/components/schemas/CatalogWrapper'
        id:
          type: string
        name:
          type: string
        description:
          type: string
        maintainer:
          type: string
        location:
          type: string
        status:
          type: string
          enum:
          - PROD
          - TEST
          - INTERNAL
        lastUpdateTime:
          type: integer
          format: int64
        scm:
          type: string
        type:
          type: string
    Catalogs:
      type: object
      properties:
        catalogs:
          type: array
          items:
            $ref: '#/components/schemas/CatalogWrapper'
    Category:
      type: object
      properties:
        properties:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/Property'
          writeOnly: true
        description:
          type: string
        type:
          type: string
        required:
          type: array
          items:
            type: string
    Config:
      type: object
      properties:
        type:
          type: string
        properties:
          $ref: '#/components/schemas/Category'
        required:
          type: array
          items:
            type: string
    Hidden:
      type: object
      properties:
        value:
          type: object
        path:
          type: string
    Media:
      type: object
      properties:
        type:
          type: string
    Pkg:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        version:
          type: string
        config:
          $ref: '#/components/schemas/Config'
    Property:
      type: object
      properties:
        type:
          type: string
        description:
          type: string
        title:
          type: string
        pattern:
          type: string
        media:
          $ref: '#/components/schemas/Media'
        minimum:
          type: string
        render:
          type: string
        sliderMin:
          type: integer
          format: int32
        sliderMax:
          type: integer
          format: int32
        sliderStep:
          type: integer
          format: int32
        sliderUnit:
          type: string
        sliderExtremity:
          type: string
        sliderExtremitySemantic:
          type: string
        sliderRangeId:
          type: string
        hidden:
          $ref: '#/components/schemas/Hidden'
        default:
          type: object
        enum:
          type: object
        x-form:
          $ref: '#/components/schemas/XForm'
        x-generated:
          $ref: '#/components/schemas/XGenerated'
    XForm:
      type: object
      properties:
        hidden:
          type: boolean
        readonly:
          type: boolean
        value:
          type: string
    XGenerated:
      type: object
      properties:
        type:
          type: string
          enum:
          - GroupID
          - AppID
          - RandomID
          - internalDNS
          - externalDNS
          - initScript
        scope:
          type: string
        name:
          type: string
    Container:
      type: object
      properties:
        name:
          type: string
        ready:
          type: boolean
    Event:
      type: object
      properties:
        message:
          type: string
        timestamp:
          type: integer
          format: int64
    Group:
      type: object
      properties:
        id:
          type: string
        apps:
          type: array
          items:
            $ref: '#/components/schemas/Service'
    Service:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        instances:
          type: integer
          format: int32
        cpus:
          type: number
          format: double
        mem:
          type: number
          format: double
        status:
          type: string
          enum:
          - DEPLOYING
          - RUNNING
          - STOPPED
        type:
          type: string
          enum:
          - KUBERNETES
        urls:
          type: array
          items:
            type: string
        internalUrls:
          type: array
          items:
            type: string
        logo:
          type: string
        env:
          type: object
          additionalProperties:
            type: string
        tasks:
          type: array
          items:
            $ref: '#/components/schemas/Task'
        events:
          type: array
          items:
            $ref: '#/components/schemas/Event'
        subtitle:
          type: string
        monitoring:
          $ref: '#/components/schemas/Monitoring'
        postInstallInstructions:
          type: string
        startedAt:
          type: integer
          format: int64
        labels:
          type: object
          additionalProperties:
            type: string
    ServicesListing:
      type: object
      properties:
        apps:
          type: array
          items:
            $ref: '#/components/schemas/Service'
        groups:
          type: array
          items:
            $ref: '#/components/schemas/Group'
    Task:
      type: object
      properties:
        id:
          type: string
        status:
          $ref: '#/components/schemas/TaskStatus'
        containers:
          type: array
          items:
            $ref: '#/components/schemas/Container'
    TaskStatus:
      type: object
      properties:
        status:
          type: string
        reason:
          type: string
    QuotaUsage:
      type: object
      properties:
        spec:
          $ref: '#/components/schemas/Quota'
        usage:
          $ref: '#/components/schemas/Quota'
    CloudShellStatus:
      type: object
      properties:
        status:
          type: string
        url:
          type: string
        packageToDeploy:
          $ref: '#/components/schemas/Pkg'
        catalogId:
          type: string
    UninstallService:
      type: object
      properties:
        path:
          type: string
        success:
          type: boolean
  securitySchemes:
    auth:
      type: oauth2
      description: Authentification keycloak
      in: header
      flows:
        authorizationCode:
          authorizationUrl: https://auth.lab.sspcloud.fr/auth/realms/sspcloud/protocol/openid-connect/auth
          tokenUrl: https://auth.lab.sspcloud.fr/auth/realms/sspcloud/protocol/openid-connect/token
          refreshUrl: https://auth.lab.sspcloud.fr/auth/realms/sspcloud/protocol/openid-connect/token
