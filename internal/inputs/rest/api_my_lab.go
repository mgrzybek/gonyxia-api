/*
 * Onyxia-api
 *
 * Swagger onyxia-api
 *
 * API version: snapshot
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */
package rest

import (
	"net/http"
)

func ApplyQuota(w http.ResponseWriter, r *http.Request) {
	w.Header().Set("Content-Type", "application/json; charset=UTF-8")
	if ! validateAuthorizationHeader(w, r) {return}
	w.WriteHeader(http.StatusNotImplemented)
}

func DestroyApp(w http.ResponseWriter, r *http.Request) {
	w.Header().Set("Content-Type", "application/json; charset=UTF-8")
	if ! validateAuthorizationHeader(w, r) {return}
	w.WriteHeader(http.StatusNotImplemented)
}

func GetApp(w http.ResponseWriter, r *http.Request) {
	w.Header().Set("Content-Type", "application/json; charset=UTF-8")
	if ! validateAuthorizationHeader(w, r) {return}
	w.WriteHeader(http.StatusNotImplemented)
}

func GetLogs(w http.ResponseWriter, r *http.Request) {
	w.Header().Set("Content-Type", "application/json; charset=UTF-8")
	if ! validateAuthorizationHeader(w, r) {return}
	w.WriteHeader(http.StatusNotImplemented)
}

func GetMyServices(w http.ResponseWriter, r *http.Request) {
	w.Header().Set("Content-Type", "application/json; charset=UTF-8")
	if ! validateAuthorizationHeader(w, r) {return}
	w.WriteHeader(http.StatusNotImplemented)
}

func GetQuota(w http.ResponseWriter, r *http.Request) {
	w.Header().Set("Content-Type", "application/json; charset=UTF-8")
	if ! validateAuthorizationHeader(w, r) {return}
	w.WriteHeader(http.StatusNotImplemented)
}

func PublishService(w http.ResponseWriter, r *http.Request) {
	w.Header().Set("Content-Type", "application/json; charset=UTF-8")
	if ! validateAuthorizationHeader(w, r) {return}
	w.WriteHeader(http.StatusNotImplemented)
}

func ResetQuota(w http.ResponseWriter, r *http.Request) {
	w.Header().Set("Content-Type", "application/json; charset=UTF-8")
	if ! validateAuthorizationHeader(w, r) {return}
	w.WriteHeader(http.StatusNotImplemented)
}

func ResetQuota1(w http.ResponseWriter, r *http.Request) {
	w.Header().Set("Content-Type", "application/json; charset=UTF-8")
	if ! validateAuthorizationHeader(w, r) {return}
	w.WriteHeader(http.StatusNotImplemented)
}

func ResetQuota2(w http.ResponseWriter, r *http.Request) {
	w.Header().Set("Content-Type", "application/json; charset=UTF-8")
	if ! validateAuthorizationHeader(w, r) {return}
	w.WriteHeader(http.StatusNotImplemented)
}

func ResetQuota3(w http.ResponseWriter, r *http.Request) {
	w.Header().Set("Content-Type", "application/json; charset=UTF-8")
	if ! validateAuthorizationHeader(w, r) {return}
	w.WriteHeader(http.StatusNotImplemented)
}

func ResetQuota4(w http.ResponseWriter, r *http.Request) {
	w.Header().Set("Content-Type", "application/json; charset=UTF-8")
	if ! validateAuthorizationHeader(w, r) {return}
	w.WriteHeader(http.StatusNotImplemented)
}

func ResetQuota5(w http.ResponseWriter, r *http.Request) {
	w.Header().Set("Content-Type", "application/json; charset=UTF-8")
	if ! validateAuthorizationHeader(w, r) {return}
	w.WriteHeader(http.StatusNotImplemented)
}

func ResetQuota6(w http.ResponseWriter, r *http.Request) {
	w.Header().Set("Content-Type", "application/json; charset=UTF-8")
	if ! validateAuthorizationHeader(w, r) {return}
	w.WriteHeader(http.StatusNotImplemented)
}
