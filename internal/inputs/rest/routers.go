/*
 * Onyxia-api
 *
 * Swagger onyxia-api
 *
 * API version: snapshot
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */
package rest

import (
	"fmt"
	"net/http"
	"strings"
	"time"

	"github.com/gorilla/mux"

	log "github.com/sirupsen/logrus"
)

type Route struct {
	Name        string
	Method      string
	Pattern     string
	HandlerFunc http.HandlerFunc
}

type Routes []Route

func NewRouter() *mux.Router {
	router := mux.NewRouter().StrictSlash(true)
	for _, route := range routes {
		var handler http.Handler
		handler = route.HandlerFunc
		handler = Logger(handler, route.Name)

		router.
			Methods(route.Method).
			Path(route.Pattern).
			Name(route.Name).
			Handler(handler)
	}

	return router
}

func Logger(inner http.Handler, name string) http.Handler {
	return http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {
		start := time.Now()

		inner.ServeHTTP(w, r)

		log.WithFields(log.Fields{
			"method":               r.Method,
			"request":              r.RequestURI,
			"resource":             name,
			"process_time_seconds": time.Since(start),
		}).Info("access")
	})
}

func Index(w http.ResponseWriter, r *http.Request) {
	fmt.Fprintf(w, "Hello World!")
}

var routes = Routes{
	Route{
		"Index",
		"GET",
		"/",
		Index,
	},

	Route{
		"GetCloudShellStatus",
		strings.ToUpper("Get"),
		"/cloudshell",
		GetCloudShellStatus,
	},

	Route{
		"ApplyQuota",
		strings.ToUpper("Post"),
		"/my-lab/quota",
		ApplyQuota,
	},

	Route{
		"DestroyApp",
		strings.ToUpper("Delete"),
		"/my-lab/app",
		DestroyApp,
	},

	Route{
		"GetApp",
		strings.ToUpper("Get"),
		"/my-lab/app",
		GetApp,
	},

	Route{
		"GetLogs",
		strings.ToUpper("Get"),
		"/my-lab/app/logs",
		GetLogs,
	},

	Route{
		"GetMyServices",
		strings.ToUpper("Get"),
		"/my-lab/services",
		GetMyServices,
	},

	Route{
		"GetQuota",
		strings.ToUpper("Get"),
		"/my-lab/quota",
		GetQuota,
	},

	Route{
		"PublishService",
		strings.ToUpper("Put"),
		"/my-lab/app",
		PublishService,
	},

	Route{
		"ResetQuota",
		strings.ToUpper("Options"),
		"/my-lab/quota/reset",
		ResetQuota,
	},

	Route{
		"ResetQuota1",
		strings.ToUpper("Put"),
		"/my-lab/quota/reset",
		ResetQuota1,
	},

	Route{
		"ResetQuota2",
		strings.ToUpper("Post"),
		"/my-lab/quota/reset",
		ResetQuota2,
	},

	Route{
		"ResetQuota3",
		strings.ToUpper("Delete"),
		"/my-lab/quota/reset",
		ResetQuota3,
	},

	Route{
		"ResetQuota4",
		strings.ToUpper("Get"),
		"/my-lab/quota/reset",
		ResetQuota4,
	},

	Route{
		"ResetQuota5",
		strings.ToUpper("Head"),
		"/my-lab/quota/reset",
		ResetQuota5,
	},

	Route{
		"ResetQuota6",
		strings.ToUpper("Patch"),
		"/my-lab/quota/reset",
		ResetQuota6,
	},

	Route{
		"Onboard",
		strings.ToUpper("Post"),
		"/onboarding",
		Onboard,
	},

	Route{
		"Configuration",
		strings.ToUpper("Get"),
		"/public/configuration",
		Configuration,
	},

	Route{
		"GetCatalogById",
		strings.ToUpper("Get"),
		"/public/catalog/{catalogId}",
		GetCatalogById,
	},

	Route{
		"GetCatalogs",
		strings.ToUpper("Get"),
		"/public/catalog",
		GetCatalogs,
	},

	Route{
		"GetIP",
		strings.ToUpper("Get"),
		"/public/ip",
		GetIP,
	},

	Route{
		"GetPackage",
		strings.ToUpper("Get"),
		"/public/catalog/{catalogId}/{packageName}",
		GetPackage,
	},

	Route{
		"GetRegions",
		strings.ToUpper("Get"),
		"/public/regions",
		GetRegions,
	},

	Route{
		"Healthcheck",
		strings.ToUpper("Get"),
		"/public/healthcheck",
		Healthcheck,
	},

	Route{
		"UserInfo",
		strings.ToUpper("Get"),
		"/user/info",
		UserInfo,
	},
}
